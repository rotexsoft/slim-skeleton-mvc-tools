#!/usr/bin/php
<?php
include_once __DIR__.DIRECTORY_SEPARATOR."cli-script-helper-functions.php";

if( !\SlimMvcTools\Functions\CliHelpers\isPhpRunningInCliMode() ) {

    echo 'Error: This script should only be run via the command line!!';
    exit(\SlimMvcTools\Functions\CliHelpers\CliExitCodes::FAILURE_EXIT);
    
} else {

    try {
        $current_directory = getcwd(); 
        echo "Current working directory: " . $current_directory . PHP_EOL;
        
        // we are going to mimic $argc and $argv
        $psuedo_argv = [];
        
        ////////////////////////////////////////////////////////////////////////////////////////////
        $my_script_name = $argv[0];
        //var_dump($my_script_name);
        $psuedo_argv[] = $my_script_name;
        
        ////////////////////////////////////////////////////////////////////////////////////////////
        $prompt_4_controller_name = 'Please enter the controller name (all lower case with words'
                                  . ' separated with dashes).' 
                                  . PHP_EOL . 'For example, to create a controller'
                                  . ' class named `ExpiredBlogPosts` enter `expired-blog-posts`.'
                                  . PHP_EOL. 'If you want an underscore followed by an uppercase'
                                  . ' letter in the resulting controller name, e.g `Expired_BlogPosts`'
                                  . ' you should enter `expired_-blog-posts` (the view files for this'
                                  . ' controller would be located in `./views/expired_-blog-posts` and'
                                  . ' the url would look like `http://localhost/expired_-blog-posts/`):';
        $controller_name = readFromLine(\SlimMvcTools\Functions\Str\color_4_console($prompt_4_controller_name, "cyan",  "black"));
        //var_dump($controller_name);
        
        while( mb_strlen( ''.$controller_name, 'UTF-8') <= 0 ) {
            
            $controller_name = readFromLine(\SlimMvcTools\Functions\Str\color_4_console(PHP_EOL.$prompt_4_controller_name, "cyan",  "black"));
            //var_dump($controller_name);
        }
        $psuedo_argv[] = '-c';
        $psuedo_argv[] = $controller_name;
        
        ////////////////////////////////////////////////////////////////////////////////////////////
        $prompt_4_path_2_src_folder = 'Please enter the path to your application\'s `src` folder'
                                  . '  (it could be absolute e.g. `/home/myapp/src` or relative'
                                  . ' e.g. `./src`). If you are entering a relative path, make sure'
                                  . ' it is relative to the current directory from which you are running'
                                  . ' this wizard (e.g. if you are running this wizard from `/home/myapp/`'
                                  . ' then entering `./src` will translate to `/home/myapp/src` as the absolute path):';
        $path_2_src_folder = readFromLine(\SlimMvcTools\Functions\Str\color_4_console(PHP_EOL.$prompt_4_path_2_src_folder, "cyan",  "black"));
        
        while( mb_strlen( ''.$path_2_src_folder, 'UTF-8') <= 0 ) {
            
            $path_2_src_folder = readFromLine(\SlimMvcTools\Functions\Str\color_4_console(PHP_EOL.$prompt_4_path_2_src_folder, "cyan",  "black"));
        }
        $psuedo_argv[] = '-p';
        $psuedo_argv[] = $path_2_src_folder;
        
        ////////////////////////////////////////////////////////////////////////////////////////////
        // Can be empty meaning '\\SlimMvcTools\\Controllers\\BaseController' will be used
        $prompt_4_parent_conroller_name = 'Please enter the name of the class your controller will'
                                  . ' extend or hit enter to use `\\SlimMvcTools\\Controllers\\BaseController`.'
                                  . ' The name should include the namespace and it should be a'
                                  . ' class that is a sub-class of \'\\SlimMvcTools\\Controllers\\BaseController\' (for example, `\MyApp\Controllers\BaseController`):';
        $parent_conroller_name = readFromLine(\SlimMvcTools\Functions\Str\color_4_console(PHP_EOL.$prompt_4_parent_conroller_name, "cyan",  "black"));
        
        $psuedo_argv[] = '-e';
        
        if( mb_strlen( ''.$parent_conroller_name, 'UTF-8') > 0 ) {
            
            $psuedo_argv[] = $parent_conroller_name;
            
        } else {
            
            $psuedo_argv[] = '\\'.\SlimMvcTools\Controllers\BaseController::class;
        }
        
        ////////////////////////////////////////////////////////////////////////////////////////////
        // Can be empty meaning controller belongs to default or global namespace
        $prompt_4_namespace_name = 'Please enter the namespace your new controller will'
                                  . ' belong to (e.g. `MyApp\Controllers`) or hit enter if you don\'t want your new controller'
                                  . ' to belong to any namespace. [NOTE: DO NOT add a trailing back slash to the namespace]:';
        $namespace_name = readFromLine(\SlimMvcTools\Functions\Str\color_4_console(PHP_EOL.$prompt_4_namespace_name, "cyan",  "black"));
        
        if( mb_strlen( ''.$namespace_name, 'UTF-8') > 0 ) {
            
            $psuedo_argv[] = '-n';
            $psuedo_argv[] = $namespace_name;
        }
        
        ////////////////////////////////////////////////////////////////////////////////////////////
        $psuedo_argc = count($psuedo_argv);
        
        ////////////////////////////////////////////////////////////////////////////////////////////
        echo PHP_EOL;
        
        $result = \SlimMvcTools\Functions\CliHelpers\createController($psuedo_argc, $psuedo_argv);
        
        \SlimMvcTools\Functions\CliHelpers\printType(
            $result->getReturnCode(), 
            $result->getReturnMessage(),
            true
        );
        
        if($result->getReturnCode() === \SlimMvcTools\Functions\CliHelpers\CliExitCodes::SUCCESS_EXIT) {
            
            passthru("cd {$current_directory} && composer dump-autoload -o");
        }
        
        exit($result->getReturnCode());

    } catch(\Exception $e) {

        $msg = 'Exception was thrown in ' . $e->getFile() . ' on line ' . $e->getLine()
            . PHP_EOL . $e->getMessage()
            . PHP_EOL . 'Exception Trace:' . PHP_EOL . $e->getTraceAsString()
            . PHP_EOL . PHP_EOL . 'Please submit a bug report to https://github.com/rotexsoft/slim-skeleton-mvc-tools/issues if symptoms persist.' . PHP_EOL;

        \SlimMvcTools\Functions\CliHelpers\printError($msg);
        exit(\SlimMvcTools\Functions\CliHelpers\CliExitCodes::EXCEPTION_EXIT);
    }
}

function readFromLine( $prompt = '' ) {
        
    echo $prompt;
    return trim(rtrim( fgets( STDIN ), PHP_EOL ));
}
